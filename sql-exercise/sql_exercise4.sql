DROP DATABASE IF EXISTS EXERCISE4;
CREATE DATABASE EXERCISE4;
-- SHOW DATABASES;
USE EXERCISE4;

DROP TABLE IF EXISTS PLAYERS;
DROP TABLE IF EXISTS MATCHES;

CREATE TABLE PLAYERS (
	PLAYER_ID INTEGER NOT NULL UNIQUE,
    GROUP_ID INTEGER NOT NULL
);

CREATE TABLE MATCHES (
	MATCH_ID INTEGER NOT NULL UNIQUE,
    FIRST_PLAYER INTEGER NOT NULL,
    SECOND_PLAYER INTEGER NOT NULL,
    FIRST_SCORE INTEGER NOT NULL,
    SECOND_SCORE INTEGER NOT NULL
);

INSERT INTO PLAYERS VALUES
	(20, 2),
    (30, 1),
    (40, 3),
    (45, 1),
    (50, 2),
    (65, 1);
    
INSERT INTO MATCHES VALUES
	(1, 30, 45, 10, 12),
    (2, 20, 50, 5, 5),
    (13, 65, 45, 10, 10),
    (5, 30, 65, 3, 15),
    (42, 45, 65, 8, 4);
    
    
WITH SCORES AS (
	SELECT FIRST_PLAYER AS PLAYER_ID, FIRST_SCORE AS SCORE
	FROM MATCHES
	UNION
	SELECT SECOND_PLAYER AS PLAYER_ID, SECOND_SCORE AS SCORE
	FROM MATCHES
),
PLAYER_SCORES AS (
	SELECT PLAYER_ID, SUM(SCORE) AS TOTAL_SCORE
    FROM SCORES 
    GROUP BY PLAYER_ID
),
RANKED_SCORES AS (
	SELECT P.GROUP_ID, P.PLAYER_ID, IFNULL(S.TOTAL_SCORE, 0) AS TOTAL_SCORE, DENSE_RANK() OVER(PARTITION BY P.GROUP_ID ORDER BY S.TOTAL_SCORE DESC, P.PLAYER_ID) AS RANKING
	FROM PLAYERS P LEFT JOIN PLAYER_SCORES S ON P.PLAYER_ID = S.PLAYER_ID
)
SELECT GROUP_ID, PLAYER_ID AS WINNER_ID
FROM RANKED_SCORES
WHERE RANKING = 1;